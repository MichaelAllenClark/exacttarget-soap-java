/*
 * XML Type:  ImportDefinition
 * Namespace: http://exacttarget.com/wsdl/partnerAPI
 * Java type: com.exacttarget.wsdl.partnerapi.ImportDefinition
 *
 * Automatically generated - do not modify.
 */
package com.exacttarget.wsdl.partnerapi.impl;
/**
 * An XML ImportDefinition(@http://exacttarget.com/wsdl/partnerAPI).
 *
 * This is a complex type.
 */
public class ImportDefinitionImpl extends com.exacttarget.wsdl.partnerapi.impl.InteractionDefinitionImpl implements com.exacttarget.wsdl.partnerapi.ImportDefinition
{
    
    public ImportDefinitionImpl(org.apache.xmlbeans.SchemaType sType)
    {
        super(sType);
    }
    
    private static final javax.xml.namespace.QName ALLOWERRORS$0 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "AllowErrors");
    private static final javax.xml.namespace.QName DESTINATIONOBJECT$2 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "DestinationObject");
    private static final javax.xml.namespace.QName FIELDMAPPINGTYPE$4 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "FieldMappingType");
    private static final javax.xml.namespace.QName FIELDMAPS$6 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "FieldMaps");
    private static final javax.xml.namespace.QName FILESPEC$8 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "FileSpec");
    private static final javax.xml.namespace.QName FILETYPE$10 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "FileType");
    private static final javax.xml.namespace.QName NOTIFICATION$12 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "Notification");
    private static final javax.xml.namespace.QName RETRIEVEFILETRANSFERLOCATION$14 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "RetrieveFileTransferLocation");
    private static final javax.xml.namespace.QName SUBSCRIBERIMPORTTYPE$16 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "SubscriberImportType");
    private static final javax.xml.namespace.QName UPDATETYPE$18 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "UpdateType");
    private static final javax.xml.namespace.QName MAXFILEAGE$20 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "MaxFileAge");
    private static final javax.xml.namespace.QName MAXFILEAGESCHEDULEOFFSET$22 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "MaxFileAgeScheduleOffset");
    private static final javax.xml.namespace.QName MAXIMPORTFREQUENCY$24 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "MaxImportFrequency");
    private static final javax.xml.namespace.QName DELIMITER$26 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "Delimiter");
    private static final javax.xml.namespace.QName HEADERLINES$28 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "HeaderLines");
    private static final javax.xml.namespace.QName AUTOGENERATEDESTINATION$30 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "AutoGenerateDestination");
    private static final javax.xml.namespace.QName CONTROLCOLUMN$32 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "ControlColumn");
    private static final javax.xml.namespace.QName CONTROLCOLUMNDEFAULTACTION$34 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "ControlColumnDefaultAction");
    private static final javax.xml.namespace.QName CONTROLCOLUMNACTIONS$36 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "ControlColumnActions");
    private static final javax.xml.namespace.QName ENDOFLINEREPRESENTATION$38 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "EndOfLineRepresentation");
    private static final javax.xml.namespace.QName NULLREPRESENTATION$40 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "NullRepresentation");
    private static final javax.xml.namespace.QName STANDARDQUOTEDSTRINGS$42 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "StandardQuotedStrings");
    private static final javax.xml.namespace.QName FILTER$44 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "Filter");
    private static final javax.xml.namespace.QName DATEFORMATTINGLOCALE$46 = 
        new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "DateFormattingLocale");
    
    
    /**
     * Gets the "AllowErrors" element
     */
    public boolean getAllowErrors()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ALLOWERRORS$0, 0);
            if (target == null)
            {
                return false;
            }
            return target.getBooleanValue();
        }
    }
    
    /**
     * Gets (as xml) the "AllowErrors" element
     */
    public org.apache.xmlbeans.XmlBoolean xgetAllowErrors()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlBoolean target = null;
            target = (org.apache.xmlbeans.XmlBoolean)get_store().find_element_user(ALLOWERRORS$0, 0);
            return target;
        }
    }
    
    /**
     * True if has "AllowErrors" element
     */
    public boolean isSetAllowErrors()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(ALLOWERRORS$0) != 0;
        }
    }
    
    /**
     * Sets the "AllowErrors" element
     */
    public void setAllowErrors(boolean allowErrors)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ALLOWERRORS$0, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ALLOWERRORS$0);
            }
            target.setBooleanValue(allowErrors);
        }
    }
    
    /**
     * Sets (as xml) the "AllowErrors" element
     */
    public void xsetAllowErrors(org.apache.xmlbeans.XmlBoolean allowErrors)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlBoolean target = null;
            target = (org.apache.xmlbeans.XmlBoolean)get_store().find_element_user(ALLOWERRORS$0, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlBoolean)get_store().add_element_user(ALLOWERRORS$0);
            }
            target.set(allowErrors);
        }
    }
    
    /**
     * Unsets the "AllowErrors" element
     */
    public void unsetAllowErrors()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(ALLOWERRORS$0, 0);
        }
    }
    
    /**
     * Gets the "DestinationObject" element
     */
    public com.exacttarget.wsdl.partnerapi.APIObject getDestinationObject()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.APIObject target = null;
            target = (com.exacttarget.wsdl.partnerapi.APIObject)get_store().find_element_user(DESTINATIONOBJECT$2, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * True if has "DestinationObject" element
     */
    public boolean isSetDestinationObject()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(DESTINATIONOBJECT$2) != 0;
        }
    }
    
    /**
     * Sets the "DestinationObject" element
     */
    public void setDestinationObject(com.exacttarget.wsdl.partnerapi.APIObject destinationObject)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.APIObject target = null;
            target = (com.exacttarget.wsdl.partnerapi.APIObject)get_store().find_element_user(DESTINATIONOBJECT$2, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.APIObject)get_store().add_element_user(DESTINATIONOBJECT$2);
            }
            target.set(destinationObject);
        }
    }
    
    /**
     * Appends and returns a new empty "DestinationObject" element
     */
    public com.exacttarget.wsdl.partnerapi.APIObject addNewDestinationObject()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.APIObject target = null;
            target = (com.exacttarget.wsdl.partnerapi.APIObject)get_store().add_element_user(DESTINATIONOBJECT$2);
            return target;
        }
    }
    
    /**
     * Unsets the "DestinationObject" element
     */
    public void unsetDestinationObject()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(DESTINATIONOBJECT$2, 0);
        }
    }
    
    /**
     * Gets the "FieldMappingType" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType.Enum getFieldMappingType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIELDMAPPINGTYPE$4, 0);
            if (target == null)
            {
                return null;
            }
            return (com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType.Enum)target.getEnumValue();
        }
    }
    
    /**
     * Gets (as xml) the "FieldMappingType" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType xgetFieldMappingType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType)get_store().find_element_user(FIELDMAPPINGTYPE$4, 0);
            return target;
        }
    }
    
    /**
     * True if has "FieldMappingType" element
     */
    public boolean isSetFieldMappingType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(FIELDMAPPINGTYPE$4) != 0;
        }
    }
    
    /**
     * Sets the "FieldMappingType" element
     */
    public void setFieldMappingType(com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType.Enum fieldMappingType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FIELDMAPPINGTYPE$4, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FIELDMAPPINGTYPE$4);
            }
            target.setEnumValue(fieldMappingType);
        }
    }
    
    /**
     * Sets (as xml) the "FieldMappingType" element
     */
    public void xsetFieldMappingType(com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType fieldMappingType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType)get_store().find_element_user(FIELDMAPPINGTYPE$4, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionFieldMappingType)get_store().add_element_user(FIELDMAPPINGTYPE$4);
            }
            target.set(fieldMappingType);
        }
    }
    
    /**
     * Unsets the "FieldMappingType" element
     */
    public void unsetFieldMappingType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(FIELDMAPPINGTYPE$4, 0);
        }
    }
    
    /**
     * Gets the "FieldMaps" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps getFieldMaps()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps)get_store().find_element_user(FIELDMAPS$6, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * True if has "FieldMaps" element
     */
    public boolean isSetFieldMaps()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(FIELDMAPS$6) != 0;
        }
    }
    
    /**
     * Sets the "FieldMaps" element
     */
    public void setFieldMaps(com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps fieldMaps)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps)get_store().find_element_user(FIELDMAPS$6, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps)get_store().add_element_user(FIELDMAPS$6);
            }
            target.set(fieldMaps);
        }
    }
    
    /**
     * Appends and returns a new empty "FieldMaps" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps addNewFieldMaps()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps)get_store().add_element_user(FIELDMAPS$6);
            return target;
        }
    }
    
    /**
     * Unsets the "FieldMaps" element
     */
    public void unsetFieldMaps()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(FIELDMAPS$6, 0);
        }
    }
    
    /**
     * Gets the "FileSpec" element
     */
    public java.lang.String getFileSpec()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FILESPEC$8, 0);
            if (target == null)
            {
                return null;
            }
            return target.getStringValue();
        }
    }
    
    /**
     * Gets (as xml) the "FileSpec" element
     */
    public org.apache.xmlbeans.XmlString xgetFileSpec()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FILESPEC$8, 0);
            return target;
        }
    }
    
    /**
     * True if has "FileSpec" element
     */
    public boolean isSetFileSpec()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(FILESPEC$8) != 0;
        }
    }
    
    /**
     * Sets the "FileSpec" element
     */
    public void setFileSpec(java.lang.String fileSpec)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FILESPEC$8, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FILESPEC$8);
            }
            target.setStringValue(fileSpec);
        }
    }
    
    /**
     * Sets (as xml) the "FileSpec" element
     */
    public void xsetFileSpec(org.apache.xmlbeans.XmlString fileSpec)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FILESPEC$8, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FILESPEC$8);
            }
            target.set(fileSpec);
        }
    }
    
    /**
     * Unsets the "FileSpec" element
     */
    public void unsetFileSpec()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(FILESPEC$8, 0);
        }
    }
    
    /**
     * Gets the "FileType" element
     */
    public com.exacttarget.wsdl.partnerapi.FileType.Enum getFileType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FILETYPE$10, 0);
            if (target == null)
            {
                return null;
            }
            return (com.exacttarget.wsdl.partnerapi.FileType.Enum)target.getEnumValue();
        }
    }
    
    /**
     * Gets (as xml) the "FileType" element
     */
    public com.exacttarget.wsdl.partnerapi.FileType xgetFileType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.FileType target = null;
            target = (com.exacttarget.wsdl.partnerapi.FileType)get_store().find_element_user(FILETYPE$10, 0);
            return target;
        }
    }
    
    /**
     * True if has "FileType" element
     */
    public boolean isSetFileType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(FILETYPE$10) != 0;
        }
    }
    
    /**
     * Sets the "FileType" element
     */
    public void setFileType(com.exacttarget.wsdl.partnerapi.FileType.Enum fileType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FILETYPE$10, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FILETYPE$10);
            }
            target.setEnumValue(fileType);
        }
    }
    
    /**
     * Sets (as xml) the "FileType" element
     */
    public void xsetFileType(com.exacttarget.wsdl.partnerapi.FileType fileType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.FileType target = null;
            target = (com.exacttarget.wsdl.partnerapi.FileType)get_store().find_element_user(FILETYPE$10, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.FileType)get_store().add_element_user(FILETYPE$10);
            }
            target.set(fileType);
        }
    }
    
    /**
     * Unsets the "FileType" element
     */
    public void unsetFileType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(FILETYPE$10, 0);
        }
    }
    
    /**
     * Gets the "Notification" element
     */
    public com.exacttarget.wsdl.partnerapi.AsyncResponse getNotification()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.AsyncResponse target = null;
            target = (com.exacttarget.wsdl.partnerapi.AsyncResponse)get_store().find_element_user(NOTIFICATION$12, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * True if has "Notification" element
     */
    public boolean isSetNotification()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(NOTIFICATION$12) != 0;
        }
    }
    
    /**
     * Sets the "Notification" element
     */
    public void setNotification(com.exacttarget.wsdl.partnerapi.AsyncResponse notification)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.AsyncResponse target = null;
            target = (com.exacttarget.wsdl.partnerapi.AsyncResponse)get_store().find_element_user(NOTIFICATION$12, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.AsyncResponse)get_store().add_element_user(NOTIFICATION$12);
            }
            target.set(notification);
        }
    }
    
    /**
     * Appends and returns a new empty "Notification" element
     */
    public com.exacttarget.wsdl.partnerapi.AsyncResponse addNewNotification()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.AsyncResponse target = null;
            target = (com.exacttarget.wsdl.partnerapi.AsyncResponse)get_store().add_element_user(NOTIFICATION$12);
            return target;
        }
    }
    
    /**
     * Unsets the "Notification" element
     */
    public void unsetNotification()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(NOTIFICATION$12, 0);
        }
    }
    
    /**
     * Gets the "RetrieveFileTransferLocation" element
     */
    public com.exacttarget.wsdl.partnerapi.FileTransferLocation getRetrieveFileTransferLocation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.FileTransferLocation target = null;
            target = (com.exacttarget.wsdl.partnerapi.FileTransferLocation)get_store().find_element_user(RETRIEVEFILETRANSFERLOCATION$14, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * True if has "RetrieveFileTransferLocation" element
     */
    public boolean isSetRetrieveFileTransferLocation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(RETRIEVEFILETRANSFERLOCATION$14) != 0;
        }
    }
    
    /**
     * Sets the "RetrieveFileTransferLocation" element
     */
    public void setRetrieveFileTransferLocation(com.exacttarget.wsdl.partnerapi.FileTransferLocation retrieveFileTransferLocation)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.FileTransferLocation target = null;
            target = (com.exacttarget.wsdl.partnerapi.FileTransferLocation)get_store().find_element_user(RETRIEVEFILETRANSFERLOCATION$14, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.FileTransferLocation)get_store().add_element_user(RETRIEVEFILETRANSFERLOCATION$14);
            }
            target.set(retrieveFileTransferLocation);
        }
    }
    
    /**
     * Appends and returns a new empty "RetrieveFileTransferLocation" element
     */
    public com.exacttarget.wsdl.partnerapi.FileTransferLocation addNewRetrieveFileTransferLocation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.FileTransferLocation target = null;
            target = (com.exacttarget.wsdl.partnerapi.FileTransferLocation)get_store().add_element_user(RETRIEVEFILETRANSFERLOCATION$14);
            return target;
        }
    }
    
    /**
     * Unsets the "RetrieveFileTransferLocation" element
     */
    public void unsetRetrieveFileTransferLocation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(RETRIEVEFILETRANSFERLOCATION$14, 0);
        }
    }
    
    /**
     * Gets the "SubscriberImportType" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType.Enum getSubscriberImportType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBSCRIBERIMPORTTYPE$16, 0);
            if (target == null)
            {
                return null;
            }
            return (com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType.Enum)target.getEnumValue();
        }
    }
    
    /**
     * Gets (as xml) the "SubscriberImportType" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType xgetSubscriberImportType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType)get_store().find_element_user(SUBSCRIBERIMPORTTYPE$16, 0);
            return target;
        }
    }
    
    /**
     * True if has "SubscriberImportType" element
     */
    public boolean isSetSubscriberImportType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(SUBSCRIBERIMPORTTYPE$16) != 0;
        }
    }
    
    /**
     * Sets the "SubscriberImportType" element
     */
    public void setSubscriberImportType(com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType.Enum subscriberImportType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(SUBSCRIBERIMPORTTYPE$16, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(SUBSCRIBERIMPORTTYPE$16);
            }
            target.setEnumValue(subscriberImportType);
        }
    }
    
    /**
     * Sets (as xml) the "SubscriberImportType" element
     */
    public void xsetSubscriberImportType(com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType subscriberImportType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType)get_store().find_element_user(SUBSCRIBERIMPORTTYPE$16, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionSubscriberImportType)get_store().add_element_user(SUBSCRIBERIMPORTTYPE$16);
            }
            target.set(subscriberImportType);
        }
    }
    
    /**
     * Unsets the "SubscriberImportType" element
     */
    public void unsetSubscriberImportType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(SUBSCRIBERIMPORTTYPE$16, 0);
        }
    }
    
    /**
     * Gets the "UpdateType" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType.Enum getUpdateType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATETYPE$18, 0);
            if (target == null)
            {
                return null;
            }
            return (com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType.Enum)target.getEnumValue();
        }
    }
    
    /**
     * Gets (as xml) the "UpdateType" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType xgetUpdateType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType)get_store().find_element_user(UPDATETYPE$18, 0);
            return target;
        }
    }
    
    /**
     * True if has "UpdateType" element
     */
    public boolean isSetUpdateType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(UPDATETYPE$18) != 0;
        }
    }
    
    /**
     * Sets the "UpdateType" element
     */
    public void setUpdateType(com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType.Enum updateType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(UPDATETYPE$18, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(UPDATETYPE$18);
            }
            target.setEnumValue(updateType);
        }
    }
    
    /**
     * Sets (as xml) the "UpdateType" element
     */
    public void xsetUpdateType(com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType updateType)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType)get_store().find_element_user(UPDATETYPE$18, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionUpdateType)get_store().add_element_user(UPDATETYPE$18);
            }
            target.set(updateType);
        }
    }
    
    /**
     * Unsets the "UpdateType" element
     */
    public void unsetUpdateType()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(UPDATETYPE$18, 0);
        }
    }
    
    /**
     * Gets the "MaxFileAge" element
     */
    public int getMaxFileAge()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MAXFILEAGE$20, 0);
            if (target == null)
            {
                return 0;
            }
            return target.getIntValue();
        }
    }
    
    /**
     * Gets (as xml) the "MaxFileAge" element
     */
    public org.apache.xmlbeans.XmlInt xgetMaxFileAge()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(MAXFILEAGE$20, 0);
            return target;
        }
    }
    
    /**
     * True if has "MaxFileAge" element
     */
    public boolean isSetMaxFileAge()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(MAXFILEAGE$20) != 0;
        }
    }
    
    /**
     * Sets the "MaxFileAge" element
     */
    public void setMaxFileAge(int maxFileAge)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MAXFILEAGE$20, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MAXFILEAGE$20);
            }
            target.setIntValue(maxFileAge);
        }
    }
    
    /**
     * Sets (as xml) the "MaxFileAge" element
     */
    public void xsetMaxFileAge(org.apache.xmlbeans.XmlInt maxFileAge)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(MAXFILEAGE$20, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlInt)get_store().add_element_user(MAXFILEAGE$20);
            }
            target.set(maxFileAge);
        }
    }
    
    /**
     * Unsets the "MaxFileAge" element
     */
    public void unsetMaxFileAge()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(MAXFILEAGE$20, 0);
        }
    }
    
    /**
     * Gets the "MaxFileAgeScheduleOffset" element
     */
    public int getMaxFileAgeScheduleOffset()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MAXFILEAGESCHEDULEOFFSET$22, 0);
            if (target == null)
            {
                return 0;
            }
            return target.getIntValue();
        }
    }
    
    /**
     * Gets (as xml) the "MaxFileAgeScheduleOffset" element
     */
    public org.apache.xmlbeans.XmlInt xgetMaxFileAgeScheduleOffset()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(MAXFILEAGESCHEDULEOFFSET$22, 0);
            return target;
        }
    }
    
    /**
     * True if has "MaxFileAgeScheduleOffset" element
     */
    public boolean isSetMaxFileAgeScheduleOffset()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(MAXFILEAGESCHEDULEOFFSET$22) != 0;
        }
    }
    
    /**
     * Sets the "MaxFileAgeScheduleOffset" element
     */
    public void setMaxFileAgeScheduleOffset(int maxFileAgeScheduleOffset)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MAXFILEAGESCHEDULEOFFSET$22, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MAXFILEAGESCHEDULEOFFSET$22);
            }
            target.setIntValue(maxFileAgeScheduleOffset);
        }
    }
    
    /**
     * Sets (as xml) the "MaxFileAgeScheduleOffset" element
     */
    public void xsetMaxFileAgeScheduleOffset(org.apache.xmlbeans.XmlInt maxFileAgeScheduleOffset)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(MAXFILEAGESCHEDULEOFFSET$22, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlInt)get_store().add_element_user(MAXFILEAGESCHEDULEOFFSET$22);
            }
            target.set(maxFileAgeScheduleOffset);
        }
    }
    
    /**
     * Unsets the "MaxFileAgeScheduleOffset" element
     */
    public void unsetMaxFileAgeScheduleOffset()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(MAXFILEAGESCHEDULEOFFSET$22, 0);
        }
    }
    
    /**
     * Gets the "MaxImportFrequency" element
     */
    public int getMaxImportFrequency()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MAXIMPORTFREQUENCY$24, 0);
            if (target == null)
            {
                return 0;
            }
            return target.getIntValue();
        }
    }
    
    /**
     * Gets (as xml) the "MaxImportFrequency" element
     */
    public org.apache.xmlbeans.XmlInt xgetMaxImportFrequency()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(MAXIMPORTFREQUENCY$24, 0);
            return target;
        }
    }
    
    /**
     * True if has "MaxImportFrequency" element
     */
    public boolean isSetMaxImportFrequency()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(MAXIMPORTFREQUENCY$24) != 0;
        }
    }
    
    /**
     * Sets the "MaxImportFrequency" element
     */
    public void setMaxImportFrequency(int maxImportFrequency)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(MAXIMPORTFREQUENCY$24, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(MAXIMPORTFREQUENCY$24);
            }
            target.setIntValue(maxImportFrequency);
        }
    }
    
    /**
     * Sets (as xml) the "MaxImportFrequency" element
     */
    public void xsetMaxImportFrequency(org.apache.xmlbeans.XmlInt maxImportFrequency)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(MAXIMPORTFREQUENCY$24, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlInt)get_store().add_element_user(MAXIMPORTFREQUENCY$24);
            }
            target.set(maxImportFrequency);
        }
    }
    
    /**
     * Unsets the "MaxImportFrequency" element
     */
    public void unsetMaxImportFrequency()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(MAXIMPORTFREQUENCY$24, 0);
        }
    }
    
    /**
     * Gets the "Delimiter" element
     */
    public java.lang.String getDelimiter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DELIMITER$26, 0);
            if (target == null)
            {
                return null;
            }
            return target.getStringValue();
        }
    }
    
    /**
     * Gets (as xml) the "Delimiter" element
     */
    public org.apache.xmlbeans.XmlString xgetDelimiter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DELIMITER$26, 0);
            return target;
        }
    }
    
    /**
     * True if has "Delimiter" element
     */
    public boolean isSetDelimiter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(DELIMITER$26) != 0;
        }
    }
    
    /**
     * Sets the "Delimiter" element
     */
    public void setDelimiter(java.lang.String delimiter)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(DELIMITER$26, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(DELIMITER$26);
            }
            target.setStringValue(delimiter);
        }
    }
    
    /**
     * Sets (as xml) the "Delimiter" element
     */
    public void xsetDelimiter(org.apache.xmlbeans.XmlString delimiter)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(DELIMITER$26, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(DELIMITER$26);
            }
            target.set(delimiter);
        }
    }
    
    /**
     * Unsets the "Delimiter" element
     */
    public void unsetDelimiter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(DELIMITER$26, 0);
        }
    }
    
    /**
     * Gets the "HeaderLines" element
     */
    public int getHeaderLines()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(HEADERLINES$28, 0);
            if (target == null)
            {
                return 0;
            }
            return target.getIntValue();
        }
    }
    
    /**
     * Gets (as xml) the "HeaderLines" element
     */
    public org.apache.xmlbeans.XmlInt xgetHeaderLines()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(HEADERLINES$28, 0);
            return target;
        }
    }
    
    /**
     * True if has "HeaderLines" element
     */
    public boolean isSetHeaderLines()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(HEADERLINES$28) != 0;
        }
    }
    
    /**
     * Sets the "HeaderLines" element
     */
    public void setHeaderLines(int headerLines)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(HEADERLINES$28, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(HEADERLINES$28);
            }
            target.setIntValue(headerLines);
        }
    }
    
    /**
     * Sets (as xml) the "HeaderLines" element
     */
    public void xsetHeaderLines(org.apache.xmlbeans.XmlInt headerLines)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlInt target = null;
            target = (org.apache.xmlbeans.XmlInt)get_store().find_element_user(HEADERLINES$28, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlInt)get_store().add_element_user(HEADERLINES$28);
            }
            target.set(headerLines);
        }
    }
    
    /**
     * Unsets the "HeaderLines" element
     */
    public void unsetHeaderLines()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(HEADERLINES$28, 0);
        }
    }
    
    /**
     * Gets the "AutoGenerateDestination" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination getAutoGenerateDestination()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination)get_store().find_element_user(AUTOGENERATEDESTINATION$30, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * True if has "AutoGenerateDestination" element
     */
    public boolean isSetAutoGenerateDestination()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(AUTOGENERATEDESTINATION$30) != 0;
        }
    }
    
    /**
     * Sets the "AutoGenerateDestination" element
     */
    public void setAutoGenerateDestination(com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination autoGenerateDestination)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination)get_store().find_element_user(AUTOGENERATEDESTINATION$30, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination)get_store().add_element_user(AUTOGENERATEDESTINATION$30);
            }
            target.set(autoGenerateDestination);
        }
    }
    
    /**
     * Appends and returns a new empty "AutoGenerateDestination" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination addNewAutoGenerateDestination()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionAutoGenerateDestination)get_store().add_element_user(AUTOGENERATEDESTINATION$30);
            return target;
        }
    }
    
    /**
     * Unsets the "AutoGenerateDestination" element
     */
    public void unsetAutoGenerateDestination()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(AUTOGENERATEDESTINATION$30, 0);
        }
    }
    
    /**
     * Gets the "ControlColumn" element
     */
    public java.lang.String getControlColumn()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CONTROLCOLUMN$32, 0);
            if (target == null)
            {
                return null;
            }
            return target.getStringValue();
        }
    }
    
    /**
     * Gets (as xml) the "ControlColumn" element
     */
    public org.apache.xmlbeans.XmlString xgetControlColumn()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CONTROLCOLUMN$32, 0);
            return target;
        }
    }
    
    /**
     * True if has "ControlColumn" element
     */
    public boolean isSetControlColumn()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(CONTROLCOLUMN$32) != 0;
        }
    }
    
    /**
     * Sets the "ControlColumn" element
     */
    public void setControlColumn(java.lang.String controlColumn)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CONTROLCOLUMN$32, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CONTROLCOLUMN$32);
            }
            target.setStringValue(controlColumn);
        }
    }
    
    /**
     * Sets (as xml) the "ControlColumn" element
     */
    public void xsetControlColumn(org.apache.xmlbeans.XmlString controlColumn)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(CONTROLCOLUMN$32, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(CONTROLCOLUMN$32);
            }
            target.set(controlColumn);
        }
    }
    
    /**
     * Unsets the "ControlColumn" element
     */
    public void unsetControlColumn()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(CONTROLCOLUMN$32, 0);
        }
    }
    
    /**
     * Gets the "ControlColumnDefaultAction" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType.Enum getControlColumnDefaultAction()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CONTROLCOLUMNDEFAULTACTION$34, 0);
            if (target == null)
            {
                return null;
            }
            return (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType.Enum)target.getEnumValue();
        }
    }
    
    /**
     * Gets (as xml) the "ControlColumnDefaultAction" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType xgetControlColumnDefaultAction()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType)get_store().find_element_user(CONTROLCOLUMNDEFAULTACTION$34, 0);
            return target;
        }
    }
    
    /**
     * True if has "ControlColumnDefaultAction" element
     */
    public boolean isSetControlColumnDefaultAction()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(CONTROLCOLUMNDEFAULTACTION$34) != 0;
        }
    }
    
    /**
     * Sets the "ControlColumnDefaultAction" element
     */
    public void setControlColumnDefaultAction(com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType.Enum controlColumnDefaultAction)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(CONTROLCOLUMNDEFAULTACTION$34, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(CONTROLCOLUMNDEFAULTACTION$34);
            }
            target.setEnumValue(controlColumnDefaultAction);
        }
    }
    
    /**
     * Sets (as xml) the "ControlColumnDefaultAction" element
     */
    public void xsetControlColumnDefaultAction(com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType controlColumnDefaultAction)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType)get_store().find_element_user(CONTROLCOLUMNDEFAULTACTION$34, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedActionType)get_store().add_element_user(CONTROLCOLUMNDEFAULTACTION$34);
            }
            target.set(controlColumnDefaultAction);
        }
    }
    
    /**
     * Unsets the "ControlColumnDefaultAction" element
     */
    public void unsetControlColumnDefaultAction()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(CONTROLCOLUMNDEFAULTACTION$34, 0);
        }
    }
    
    /**
     * Gets the "ControlColumnActions" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions getControlColumnActions()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions)get_store().find_element_user(CONTROLCOLUMNACTIONS$36, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * True if has "ControlColumnActions" element
     */
    public boolean isSetControlColumnActions()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(CONTROLCOLUMNACTIONS$36) != 0;
        }
    }
    
    /**
     * Sets the "ControlColumnActions" element
     */
    public void setControlColumnActions(com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions controlColumnActions)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions)get_store().find_element_user(CONTROLCOLUMNACTIONS$36, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions)get_store().add_element_user(CONTROLCOLUMNACTIONS$36);
            }
            target.set(controlColumnActions);
        }
    }
    
    /**
     * Appends and returns a new empty "ControlColumnActions" element
     */
    public com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions addNewControlColumnActions()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions target = null;
            target = (com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions)get_store().add_element_user(CONTROLCOLUMNACTIONS$36);
            return target;
        }
    }
    
    /**
     * Unsets the "ControlColumnActions" element
     */
    public void unsetControlColumnActions()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(CONTROLCOLUMNACTIONS$36, 0);
        }
    }
    
    /**
     * Gets the "EndOfLineRepresentation" element
     */
    public java.lang.String getEndOfLineRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ENDOFLINEREPRESENTATION$38, 0);
            if (target == null)
            {
                return null;
            }
            return target.getStringValue();
        }
    }
    
    /**
     * Gets (as xml) the "EndOfLineRepresentation" element
     */
    public org.apache.xmlbeans.XmlString xgetEndOfLineRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ENDOFLINEREPRESENTATION$38, 0);
            return target;
        }
    }
    
    /**
     * True if has "EndOfLineRepresentation" element
     */
    public boolean isSetEndOfLineRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(ENDOFLINEREPRESENTATION$38) != 0;
        }
    }
    
    /**
     * Sets the "EndOfLineRepresentation" element
     */
    public void setEndOfLineRepresentation(java.lang.String endOfLineRepresentation)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(ENDOFLINEREPRESENTATION$38, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(ENDOFLINEREPRESENTATION$38);
            }
            target.setStringValue(endOfLineRepresentation);
        }
    }
    
    /**
     * Sets (as xml) the "EndOfLineRepresentation" element
     */
    public void xsetEndOfLineRepresentation(org.apache.xmlbeans.XmlString endOfLineRepresentation)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(ENDOFLINEREPRESENTATION$38, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(ENDOFLINEREPRESENTATION$38);
            }
            target.set(endOfLineRepresentation);
        }
    }
    
    /**
     * Unsets the "EndOfLineRepresentation" element
     */
    public void unsetEndOfLineRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(ENDOFLINEREPRESENTATION$38, 0);
        }
    }
    
    /**
     * Gets the "NullRepresentation" element
     */
    public java.lang.String getNullRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(NULLREPRESENTATION$40, 0);
            if (target == null)
            {
                return null;
            }
            return target.getStringValue();
        }
    }
    
    /**
     * Gets (as xml) the "NullRepresentation" element
     */
    public org.apache.xmlbeans.XmlString xgetNullRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(NULLREPRESENTATION$40, 0);
            return target;
        }
    }
    
    /**
     * True if has "NullRepresentation" element
     */
    public boolean isSetNullRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(NULLREPRESENTATION$40) != 0;
        }
    }
    
    /**
     * Sets the "NullRepresentation" element
     */
    public void setNullRepresentation(java.lang.String nullRepresentation)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(NULLREPRESENTATION$40, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(NULLREPRESENTATION$40);
            }
            target.setStringValue(nullRepresentation);
        }
    }
    
    /**
     * Sets (as xml) the "NullRepresentation" element
     */
    public void xsetNullRepresentation(org.apache.xmlbeans.XmlString nullRepresentation)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(NULLREPRESENTATION$40, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(NULLREPRESENTATION$40);
            }
            target.set(nullRepresentation);
        }
    }
    
    /**
     * Unsets the "NullRepresentation" element
     */
    public void unsetNullRepresentation()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(NULLREPRESENTATION$40, 0);
        }
    }
    
    /**
     * Gets the "StandardQuotedStrings" element
     */
    public boolean getStandardQuotedStrings()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STANDARDQUOTEDSTRINGS$42, 0);
            if (target == null)
            {
                return false;
            }
            return target.getBooleanValue();
        }
    }
    
    /**
     * Gets (as xml) the "StandardQuotedStrings" element
     */
    public org.apache.xmlbeans.XmlBoolean xgetStandardQuotedStrings()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlBoolean target = null;
            target = (org.apache.xmlbeans.XmlBoolean)get_store().find_element_user(STANDARDQUOTEDSTRINGS$42, 0);
            return target;
        }
    }
    
    /**
     * True if has "StandardQuotedStrings" element
     */
    public boolean isSetStandardQuotedStrings()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(STANDARDQUOTEDSTRINGS$42) != 0;
        }
    }
    
    /**
     * Sets the "StandardQuotedStrings" element
     */
    public void setStandardQuotedStrings(boolean standardQuotedStrings)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(STANDARDQUOTEDSTRINGS$42, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(STANDARDQUOTEDSTRINGS$42);
            }
            target.setBooleanValue(standardQuotedStrings);
        }
    }
    
    /**
     * Sets (as xml) the "StandardQuotedStrings" element
     */
    public void xsetStandardQuotedStrings(org.apache.xmlbeans.XmlBoolean standardQuotedStrings)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlBoolean target = null;
            target = (org.apache.xmlbeans.XmlBoolean)get_store().find_element_user(STANDARDQUOTEDSTRINGS$42, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlBoolean)get_store().add_element_user(STANDARDQUOTEDSTRINGS$42);
            }
            target.set(standardQuotedStrings);
        }
    }
    
    /**
     * Unsets the "StandardQuotedStrings" element
     */
    public void unsetStandardQuotedStrings()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(STANDARDQUOTEDSTRINGS$42, 0);
        }
    }
    
    /**
     * Gets the "Filter" element
     */
    public java.lang.String getFilter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FILTER$44, 0);
            if (target == null)
            {
                return null;
            }
            return target.getStringValue();
        }
    }
    
    /**
     * Gets (as xml) the "Filter" element
     */
    public org.apache.xmlbeans.XmlString xgetFilter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FILTER$44, 0);
            return target;
        }
    }
    
    /**
     * True if has "Filter" element
     */
    public boolean isSetFilter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(FILTER$44) != 0;
        }
    }
    
    /**
     * Sets the "Filter" element
     */
    public void setFilter(java.lang.String filter)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.SimpleValue target = null;
            target = (org.apache.xmlbeans.SimpleValue)get_store().find_element_user(FILTER$44, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.SimpleValue)get_store().add_element_user(FILTER$44);
            }
            target.setStringValue(filter);
        }
    }
    
    /**
     * Sets (as xml) the "Filter" element
     */
    public void xsetFilter(org.apache.xmlbeans.XmlString filter)
    {
        synchronized (monitor())
        {
            check_orphaned();
            org.apache.xmlbeans.XmlString target = null;
            target = (org.apache.xmlbeans.XmlString)get_store().find_element_user(FILTER$44, 0);
            if (target == null)
            {
                target = (org.apache.xmlbeans.XmlString)get_store().add_element_user(FILTER$44);
            }
            target.set(filter);
        }
    }
    
    /**
     * Unsets the "Filter" element
     */
    public void unsetFilter()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(FILTER$44, 0);
        }
    }
    
    /**
     * Gets the "DateFormattingLocale" element
     */
    public com.exacttarget.wsdl.partnerapi.Locale getDateFormattingLocale()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.Locale target = null;
            target = (com.exacttarget.wsdl.partnerapi.Locale)get_store().find_element_user(DATEFORMATTINGLOCALE$46, 0);
            if (target == null)
            {
                return null;
            }
            return target;
        }
    }
    
    /**
     * True if has "DateFormattingLocale" element
     */
    public boolean isSetDateFormattingLocale()
    {
        synchronized (monitor())
        {
            check_orphaned();
            return get_store().count_elements(DATEFORMATTINGLOCALE$46) != 0;
        }
    }
    
    /**
     * Sets the "DateFormattingLocale" element
     */
    public void setDateFormattingLocale(com.exacttarget.wsdl.partnerapi.Locale dateFormattingLocale)
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.Locale target = null;
            target = (com.exacttarget.wsdl.partnerapi.Locale)get_store().find_element_user(DATEFORMATTINGLOCALE$46, 0);
            if (target == null)
            {
                target = (com.exacttarget.wsdl.partnerapi.Locale)get_store().add_element_user(DATEFORMATTINGLOCALE$46);
            }
            target.set(dateFormattingLocale);
        }
    }
    
    /**
     * Appends and returns a new empty "DateFormattingLocale" element
     */
    public com.exacttarget.wsdl.partnerapi.Locale addNewDateFormattingLocale()
    {
        synchronized (monitor())
        {
            check_orphaned();
            com.exacttarget.wsdl.partnerapi.Locale target = null;
            target = (com.exacttarget.wsdl.partnerapi.Locale)get_store().add_element_user(DATEFORMATTINGLOCALE$46);
            return target;
        }
    }
    
    /**
     * Unsets the "DateFormattingLocale" element
     */
    public void unsetDateFormattingLocale()
    {
        synchronized (monitor())
        {
            check_orphaned();
            get_store().remove_element(DATEFORMATTINGLOCALE$46, 0);
        }
    }
    /**
     * An XML FieldMaps(@http://exacttarget.com/wsdl/partnerAPI).
     *
     * This is a complex type.
     */
    public static class FieldMapsImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.exacttarget.wsdl.partnerapi.ImportDefinition.FieldMaps
    {
        
        public FieldMapsImpl(org.apache.xmlbeans.SchemaType sType)
        {
            super(sType);
        }
        
        private static final javax.xml.namespace.QName FIELDMAP$0 = 
            new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "FieldMap");
        
        
        /**
         * Gets array of all "FieldMap" elements
         */
        public com.exacttarget.wsdl.partnerapi.FieldMap[] getFieldMapArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(FIELDMAP$0, targetList);
                com.exacttarget.wsdl.partnerapi.FieldMap[] result = new com.exacttarget.wsdl.partnerapi.FieldMap[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "FieldMap" element
         */
        public com.exacttarget.wsdl.partnerapi.FieldMap getFieldMapArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.FieldMap target = null;
                target = (com.exacttarget.wsdl.partnerapi.FieldMap)get_store().find_element_user(FIELDMAP$0, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "FieldMap" element
         */
        public int sizeOfFieldMapArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(FIELDMAP$0);
            }
        }
        
        /**
         * Sets array of all "FieldMap" element
         */
        public void setFieldMapArray(com.exacttarget.wsdl.partnerapi.FieldMap[] fieldMapArray)
        {
            synchronized (monitor())
            {
                check_orphaned();
                arraySetterHelper(fieldMapArray, FIELDMAP$0);
            }
        }
        
        /**
         * Sets ith "FieldMap" element
         */
        public void setFieldMapArray(int i, com.exacttarget.wsdl.partnerapi.FieldMap fieldMap)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.FieldMap target = null;
                target = (com.exacttarget.wsdl.partnerapi.FieldMap)get_store().find_element_user(FIELDMAP$0, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(fieldMap);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "FieldMap" element
         */
        public com.exacttarget.wsdl.partnerapi.FieldMap insertNewFieldMap(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.FieldMap target = null;
                target = (com.exacttarget.wsdl.partnerapi.FieldMap)get_store().insert_element_user(FIELDMAP$0, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "FieldMap" element
         */
        public com.exacttarget.wsdl.partnerapi.FieldMap addNewFieldMap()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.FieldMap target = null;
                target = (com.exacttarget.wsdl.partnerapi.FieldMap)get_store().add_element_user(FIELDMAP$0);
                return target;
            }
        }
        
        /**
         * Removes the ith "FieldMap" element
         */
        public void removeFieldMap(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(FIELDMAP$0, i);
            }
        }
    }
    /**
     * An XML ControlColumnActions(@http://exacttarget.com/wsdl/partnerAPI).
     *
     * This is a complex type.
     */
    public static class ControlColumnActionsImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements com.exacttarget.wsdl.partnerapi.ImportDefinition.ControlColumnActions
    {
        
        public ControlColumnActionsImpl(org.apache.xmlbeans.SchemaType sType)
        {
            super(sType);
        }
        
        private static final javax.xml.namespace.QName CONTROLCOLUMNACTION$0 = 
            new javax.xml.namespace.QName("http://exacttarget.com/wsdl/partnerAPI", "ControlColumnAction");
        
        
        /**
         * Gets array of all "ControlColumnAction" elements
         */
        public com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction[] getControlColumnActionArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                java.util.List targetList = new java.util.ArrayList();
                get_store().find_all_element_users(CONTROLCOLUMNACTION$0, targetList);
                com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction[] result = new com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction[targetList.size()];
                targetList.toArray(result);
                return result;
            }
        }
        
        /**
         * Gets ith "ControlColumnAction" element
         */
        public com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction getControlColumnActionArray(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction target = null;
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction)get_store().find_element_user(CONTROLCOLUMNACTION$0, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                return target;
            }
        }
        
        /**
         * Returns number of "ControlColumnAction" element
         */
        public int sizeOfControlColumnActionArray()
        {
            synchronized (monitor())
            {
                check_orphaned();
                return get_store().count_elements(CONTROLCOLUMNACTION$0);
            }
        }
        
        /**
         * Sets array of all "ControlColumnAction" element
         */
        public void setControlColumnActionArray(com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction[] controlColumnActionArray)
        {
            synchronized (monitor())
            {
                check_orphaned();
                arraySetterHelper(controlColumnActionArray, CONTROLCOLUMNACTION$0);
            }
        }
        
        /**
         * Sets ith "ControlColumnAction" element
         */
        public void setControlColumnActionArray(int i, com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction controlColumnAction)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction target = null;
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction)get_store().find_element_user(CONTROLCOLUMNACTION$0, i);
                if (target == null)
                {
                    throw new IndexOutOfBoundsException();
                }
                target.set(controlColumnAction);
            }
        }
        
        /**
         * Inserts and returns a new empty value (as xml) as the ith "ControlColumnAction" element
         */
        public com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction insertNewControlColumnAction(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction target = null;
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction)get_store().insert_element_user(CONTROLCOLUMNACTION$0, i);
                return target;
            }
        }
        
        /**
         * Appends and returns a new empty value (as xml) as the last "ControlColumnAction" element
         */
        public com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction addNewControlColumnAction()
        {
            synchronized (monitor())
            {
                check_orphaned();
                com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction target = null;
                target = (com.exacttarget.wsdl.partnerapi.ImportDefinitionColumnBasedAction)get_store().add_element_user(CONTROLCOLUMNACTION$0);
                return target;
            }
        }
        
        /**
         * Removes the ith "ControlColumnAction" element
         */
        public void removeControlColumnAction(int i)
        {
            synchronized (monitor())
            {
                check_orphaned();
                get_store().remove_element(CONTROLCOLUMNACTION$0, i);
            }
        }
    }
}
